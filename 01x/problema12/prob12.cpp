/*
 *	The sequence of triangle numbers is generated by adding the natural numbers.
 *	So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 *
 *	1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 *	Let us list the factors of the first seven triangle numbers:
 *
 *	 1: 1
 *	 3: 1,3
 *	 6: 1,2,3,6
 *	10: 1,2,5,10
 *	15: 1,3,5,15
 *	21: 1,3,7,21
 *	28: 1,2,4,7,14,28
 *	We can see that 28 is the first triangle number to have over five divisors.
 *
 *	What is the value of the first triangle number to have over five hundred divisors?
 */
#include <stdio.h>
#include "prime.h"
#define MAX_NUMB 500

double nextTriangleNumber();
int numberOfDivisors(double p);

int main(){
	double x = nextTriangleNumber();
	for(; numberOfDivisors(x) <= 500; x = nextTriangleNumber());
	printf("%.0f\n", x);
	return 0;
}

double nextTriangleNumber(){
	static double n = 0;
	static double resultado = 0;
	resultado += ++n;
	return resultado;
}

int numberOfDivisors(double p){
	double i;
	double temp;
	int n_exp = 0;
	int cont = 1;
	for(i = nextPrime(true) ; p > 1 ; ){
		if(modf(p / i, &temp) == 0){
			p = temp;
			n_exp++;
		} else {
			i = nextPrime(false);
			cont *=(n_exp + 1);
			n_exp = 0;
		}
	}
	cont *=(n_exp + 1);
	return cont;
}
