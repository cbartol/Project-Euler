/*
 *	Consider all integer combinations of ab for 2 <= a <= 5 and 2 <= b <= 5:
 *
 *	2^2=4, 2^3=8, 2^4=16, 2^5=32
 *	3^2=9, 3^3=27, 3^4=81, 3^5=243
 *	4^2=16, 4^3=64, 4^4=256, 4^5=1024
 *	5^2=25, 5^3=125, 5^4=625, 5^5=3125
 *	If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:
 *
 *	4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
 *
 *	How many distinct terms are in the sequence generated by ab for 2 <= a <= 100 and 2 <= b <= 100?
 */
#include <iostream>
#include <algorithm>
#include <list>
#include <vector>
#include "../../auxx/prints.h"

#define STR_SIZE 201

std::vector<int> *str_pow(int n, int exp);

int main(){
	std::vector<std::vector<int> > numbers;
	std::vector<int> *teste;
	int i, j;
	for(i = 2; i <= 100 ; i++){
		for(j=2; j <= 100 ; j++){
			numbers.push_back(*str_pow(i, j));
		}
	}
	sort(numbers.begin(), numbers.end());
	
	std::vector<std::vector<int> >::iterator it;
	it = unique (numbers.begin(), numbers.end());
	numbers.resize( it - numbers.begin() );

	std::cout << "Answer: " << numbers.size() << std::endl;

	return 0;
}

std::vector<int> *str_pow(int n, int exp){
	std::vector<int> *numero = new std::vector<int>();
	int i, z;
	for(i = 0 ; i <STR_SIZE ; i++){
		numero->push_back(0);
	}
	(*numero)[0] = 1;
	for(z = 0; z <exp ; z++){
		for(i = 0; i <STR_SIZE ; i++){
			while((*numero)[i] >= 10){
				(*numero)[i] -= 10;
				(*numero)[i+1] += 1;
			}
			(*numero)[i] *= n;
		}
	}
	for(i = 0; i <STR_SIZE ; i++){
		while((*numero)[i] >= 10){
			(*numero)[i] -= 10;
			(*numero)[i+1] += 1;
		}
	}
	return numero;	
}
